// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Fetching culture values can fetch culture values without auth 1`] = `
Object {
  "data": Object {
    "cultureValues": Array [
      Object {
        "name": "Teamwork",
      },
      Object {
        "name": "Integrity",
      },
      Object {
        "name": "Helpful",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`submitting responses is able to update response without logged in 1`] = `
Object {
  "data": Object {
    "updateResponse": Object {
      "jwt": Any<String>,
      "response": Object {
        "feeling": "HAPPY",
        "submittedAt": Any<String>,
      },
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`submitting responses is not able to update response with invalid feeling 1`] = `"{\\"http\\":{\\"headers\\":{}},\\"errors\\":[{\\"message\\":\\"ValidationError\\",\\"locations\\":[{\\"line\\":3,\\"column\\":7}],\\"path\\":[\\"updateResponse\\"],\\"extensions\\":{\\"code\\":\\"BAD_USER_INPUT\\",\\"exception\\":{\\"errors\\":{\\"feeling\\":\\"Feeling must be one of the following values: happy, neutral, sad\\"}}}}],\\"data\\":null}"`;

exports[`submitting responses is not able to update response with invalid id 1`] = `"{\\"http\\":{\\"headers\\":{}},\\"errors\\":[{\\"message\\":\\"ValidationError\\",\\"locations\\":[{\\"line\\":3,\\"column\\":7}],\\"path\\":[\\"updateResponse\\"],\\"extensions\\":{\\"code\\":\\"BAD_USER_INPUT\\",\\"exception\\":{\\"errors\\":{\\"auth\\":\\"You are not authorized to perform this action\\"}}}}],\\"data\\":null}"`;

exports[`submitting responses is not able to update response without feeling 1`] = `"{\\"http\\":{\\"headers\\":{}},\\"errors\\":[{\\"message\\":\\"ValidationError\\",\\"locations\\":[{\\"line\\":3,\\"column\\":7}],\\"path\\":[\\"updateResponse\\"],\\"extensions\\":{\\"code\\":\\"BAD_USER_INPUT\\",\\"exception\\":{\\"errors\\":{\\"feeling\\":\\"Feeling must be one of the following values: happy, neutral, sad\\"}}}}],\\"data\\":null}"`;

exports[`viewing responses is able to list responses belonging to team 1`] = `
Object {
  "data": Object {
    "responses": Array [
      Object {
        "feeling": "HAPPY",
        "user": Object {
          "email": "darth@vader.com",
        },
      },
      Object {
        "feeling": "HAPPY",
        "user": Object {
          "email": "anakin@skywalker.com",
        },
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`viewing responses not able to list responses if not logged in 1`] = `"{\\"http\\":{\\"headers\\":{}},\\"errors\\":[{\\"message\\":\\"ValidationError\\",\\"locations\\":[{\\"line\\":3,\\"column\\":7}],\\"path\\":[\\"responses\\"],\\"extensions\\":{\\"code\\":\\"BAD_USER_INPUT\\",\\"exception\\":{\\"errors\\":{\\"auth\\":\\"You are not authorized to perform this action\\"}}}}],\\"data\\":null}"`;

exports[`viewing responses only show responses in the filtered dates 1`] = `
Object {
  "data": Object {
    "responses": Array [
      Object {
        "feeling": "HAPPY",
        "user": Object {
          "email": "darth@vader.com",
        },
      },
      Object {
        "feeling": "HAPPY",
        "user": Object {
          "email": "anakin@skywalker.com",
        },
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;
